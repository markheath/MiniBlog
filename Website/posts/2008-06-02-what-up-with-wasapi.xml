<post>
  <title>What's up with WASAPI?</title>
  <slug>what-up-with-wasapi</slug>
  <author>Mark Heath</author>
  <pubDate>2008-06-02 11:17:00</pubDate>
  <lastModified>2008-06-02 11:17:54</lastModified>
  <content>&lt;p&gt;Windows Vista introduced a new series of APIs for audio, called &lt;strong&gt;CoreAudio&lt;/strong&gt;. This includes &lt;strong&gt;WASAPI &lt;/strong&gt;(Windows Audio Session API), a brand new API for capturing and rendering audio. &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Decisions, Decisions&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Of course, there were always ways of dealing with audio in previous versions of Windows. And they are still available in Vista, so there is no need to move if you don't want to. Here's the main choices...&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;WinMM&lt;/strong&gt; - these are the APIs that have been around for ages (e.g. the waveOut... and waveIn... functions). Their main limitation is poor latency (its hard to go much below 50ms without dropouts).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;DirectSound&lt;/strong&gt; - has its uses, particularly for game development, but it appears Microsoft is phasing this out too.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Kernel Streaming&lt;/strong&gt; - this is what most of the pro audio applications use to talk directly to the WDM driver with minimal latency.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;ASIO&lt;/strong&gt; - This is a &lt;a href="http://en.wikipedia.org/wiki/Audio_Stream_Input/Output"&gt;Steinberg audio interface model&lt;/a&gt; used by virtually all pro audio applications and is usually the best way to work at very low latencies. Pro audio sound card manufacturers provide ASIO drivers. Its one weakness is that you can only use one ASIO driver at a time, which has potential to cause issues in the future as more and more studio equipment such as microphones, sound modules and monitors (that's what speakers are called in the world of pro audio) come with USB interfaces rather than the older model of plugging all your ins and outs into a single audio interface.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Why Yet Another Audio API?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;So why has Microsoft added WASAPI to the list?&lt;/p&gt; &lt;ul&gt; &lt;li&gt;First, Vista has a completely &lt;strong&gt;new audio mixing engine&lt;/strong&gt;, so WASAPI gives you the chance to plug directly into it rather than going through a layer of abstraction. The reasons for the new audio engine are:&lt;/li&gt; &lt;ul&gt; &lt;li&gt;A move to &lt;strong&gt;32 bit floating point&lt;/strong&gt; rather than 16 bit, which greatly improves audio quality when dealing with multiple audio streams or effects.&lt;/li&gt; &lt;li&gt;A move from kernel mode into &lt;strong&gt;user mode&lt;/strong&gt; in a bid to increase system stability (bad drivers can't take the system down).&lt;/li&gt; &lt;li&gt;The concept of &lt;strong&gt;endpoints&lt;/strong&gt; rather than audio devices - making it easier for Windows users to send sounds to "headphones" or record sound from "microphone" rather than requiring them to know technical details about the soundcards installed on their system&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Grouping audio streams&lt;/strong&gt;. In Vista, you can group together all audio streams out of a single application and control their volume separately. In other words, a per-application volume control. This is a bit more involved than might be at first thought, because some applications such as IE host all kinds of processes and plugins that all play sound in their own way.&lt;/li&gt;&lt;/ul&gt; &lt;li&gt;Second, the intention was to support pro audio applications which needed to be as close to the metal as possible, and keep &lt;strong&gt;latency&lt;/strong&gt; to a bare minimum. (see Larry Osterman's &lt;a href="http://blogs.msdn.com/larryosterman/archive/2005/12/07/501306.aspx"&gt;Where does WASAPI fit in the big multimedia API picture?&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Learning WASAPI&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Documentation on WASAPI is fairly sparse despite Vista being out for well over a year now. The best places at the moment to go are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/windowsmedia/default.aspx"&gt;WASAPI MSDN Documentation&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://ampalliance.org/blogs/microsoft/archive/2007/08/14/Microsoft-AMP-Summit-Decks.aspx"&gt;Microsoft AMP Summit Powerpoint Presentations&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://blogs.msdn.com/larryosterman/"&gt;Larry Osterman's Weblog&lt;/a&gt; - Larry was directly involved with developing&amp;nbsp; WASAPI&lt;/li&gt; &lt;li&gt;erm... that's it. Not really a lot about at the moment.&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Who's Using It?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;So is anyone actually using WASAPI? Well, I use a variety of pro audio applications, each of which offer the user a selection from a variety of APIs, and yet none of them have added WASAPI to the list. Even &lt;a href="http://www.cakewalk.com/"&gt;Cakewalk&lt;/a&gt;, who seem to be very loyal to Microsoft, have stuck with &lt;a href="http://forum.cakewalk.com/tm.asp?m=1280654&amp;amp;mpage=1&amp;amp;key=WASAPI&amp;amp;#1281540"&gt;kernel streaming to access the new WaveRT driver model&lt;/a&gt; rather than using WASAPI.&lt;/p&gt; &lt;p&gt;The trouble seems to be that WASAPI doesn't offer anything that WDM Kernel Streaming doesn't already, and since WASAPI is Vista only, there is no incentive to switch. And with Windows XP not looking like it will go out of common usage for a very long time, writing a new application based on WASAPI doesn't make much sense.&lt;/p&gt; &lt;p&gt;But what about slightly less pro audio applications? What if someone is writing a new application that wants to deal in some way with individual audio samples, and is able to target just Vista and above. Could they choose to use WASAPI? It all depends on how much work they are willing to do...&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Rendering Modes&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;WASAPI gives two options for audio rendering - &lt;strong&gt;Shared &lt;/strong&gt;mode and &lt;strong&gt;Exclusive &lt;/strong&gt;mode. In exclusive mode, you are the only application talking to the audio endpoint in question - all other applications cannot make any noise. This gives the absolutely best performance possible, so would the choice of all pro audio applications like Cubase, SONAR, REAPER, Pro Tools etc. But as I have already said, they are not using WASAPI. They are using ASIO or Kernel Streaming.&lt;/p&gt; &lt;p&gt;Which leaves us with shared mode. This allows you to share the endpoint with other applications. In other words, you can still hear your Windows sounds etc. Of course, when you share an endpoint, one application might want to play sound at 48kHz 24 bit stereo, while another wants to play it at 22kHz 16 bit mono. With the WinMM APIs, this is no problem - built in converters will convert each audio stream to the format of the Windows mixing engine.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The Missing Feature&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Now I have been creating a set of .NET wrappers for WASAPI as part of my &lt;a href="http://www.codeplex.com/naudio"&gt;NAudio&lt;/a&gt; open source audio library. After the pain of writing the mountains of COM interop required to get .NET talking to WASAPI, I hit a brick wall. &lt;strong&gt;WASAPI does not offer sample rate conversion&lt;/strong&gt;. In other words, to use shared mode, you must either hope that the Vista machine's audio engine is set to the exact sample rate of your audio, or you must write your own sample rate converter. And &lt;a href="http://en.wikipedia.org/wiki/Sample_rate_conversion"&gt;sample rate conversion&lt;/a&gt; is by no means trivial. Especially if your criteria are that it must not degrade the audio quality and it must be as fast as possible.&lt;/p&gt; &lt;p&gt;Why on earth could Microsoft not have given us SRC with WASAPI? Sure latency will be affected (or to be more accurate, processor load will increase, making lower latencies harder to achieve). But this is taken for granted with shared mode. We know that when we are sharing the endpoint then SRC must occur somewhere. Microsoft already have done the R&amp;amp;D to create a configurable performant Sample Rate Converter. Why not let WASAPI plug it in automatically (or at least give us a flag to ask WASAPI to do SRC for us)?&lt;/p&gt; &lt;p&gt;The upshot of this is that for me to continue with my WASAPI .NET interop I now have to wrap the &lt;a href="http://msdn.microsoft.com/en-us/library/bb331839(VS.85).aspx"&gt;Audio Resampler DSP DMO&lt;/a&gt; (DirectX Media Object), which is a whole new can of worms (perhaps another blog post later).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The Future of WASAPI&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;WASAPI is here to stay, but if it is to be used more widely, it needs to be made more developer friendly. There is I guess the possibility that pro audio companies will look to it more as we go to 64 bit Windows and as more people move to Vista, but it will really be able to pick up some traction if it was easier to use in shared mode. Here's my two suggestions...&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Build in sample rate conversion in shared mode (and exclusive mode for those using sample rates not supported by the device)&lt;/li&gt; &lt;li&gt;Build a low-level audio API in .NET as part of the next version of the .NET framework, using a simple model of Wave Streams that can be plugged together and connected to WASAPI endpoint devices (or other driver models or file types). More on this in a future blogpost though.&lt;/li&gt;&lt;/ul&gt;  </content>
  <ispublished>true</ispublished>
  <categories>
    <category>NAudio</category>
    <category>audio</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="true" id="bbdd7702-66d2-4a61-bdab-70b2ad1a37c0">
      <author>chris</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2011-12-12 11:18:02</date>
      <content>Hello, Mark! Interesting article! I have troubles setting my sound on my Windows 7 x64bit. I have a Asus Xonar DS soundcard and I&amp;#39;m using AIMP3 audio player (as I read it&amp;#39;s the best audio pc player regarding design and sound quality, though foobar might be better at sound quality, but so poor in design).&lt;br /&gt;&lt;br /&gt;The problem is that sound quality can be set from the audio player, from the soundcard program and from the Windows 7 Sound section. Which settings are, let&amp;#39;s say, the master for all others?&lt;br /&gt;&lt;br /&gt;Another problem is that I&amp;#39;ve found the tab containg Shared Mode and Exclusive Mode. If Exclusive Mode is better, how do I disable Shared Mode?&lt;br /&gt;&lt;br /&gt;The most important issue is that my AIMP3 player has 3 ways of playing the sound: through ASIO, DirectSound and WASAPI. What should I choose and at what quality? I&amp;#39;ve been playing with them a while and I&amp;#39;ve let the player on WASAPI as I can&amp;#39;t tell any audible difference between WASAPI and DirectSound. ASIO hasn&amp;#39;t the output power as the others, but I guess it provides better quality at low db?&lt;br /&gt;&lt;br /&gt;Please, help me! I&amp;#39;ve searched a lot, but I really can&amp;#39;t find a sound guide to solve all these issues. And you seem very good with sound.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="a892efd9-99ff-43bc-8b4d-2be44b5c1ef4">
      <author>Mark H</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/17900587357903273800</website>
      <ip />
      <userAgent />
      <date>2011-12-12 11:22:00</date>
      <content>Hi chris, the driver model shouldn&amp;#39;t really affect sound quality. ASIO is targetted at recording software that needs to work at low latencies. It is not worth using for general playback of media. WASAPI is the same - more aimed at low latency. Exclusive mode gives one application exclusive access to the soundcard. I would just use DirectSound if I were you.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="da75c93e-7a2c-42c5-be81-8c263af40157">
      <author>Stephen</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2013-05-24 06:15:51</date>
      <content>You hit the head right on the nail.  We are a military audio simulation company that uses Windows 7 and yes, we found out right away that a SRC was not present.  We needed the other aspects of WASAPI ad had tried to use ASIO and have 64 separate input streams going at once as well as the need for multiple applications doing this as well.  So we had no choice but to write a sample rate converter and use WASAPI.  Even though it has been a long trudge, I am glad we went this way.  Our luck will be that Microsoft will add an SRC and ship it in a service pack next week.  </content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="3f6c6528-0bbf-4b06-bbf7-7b3a964c5f31">
      <author>Anonymous</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2013-08-11 21:16:29</date>
      <content>I just ran across something interesting, a DSP DLL that is part of Win 7. Apparently, this is a DLL that has the capability to perform SRC that I had been asking about earlier.  It makes sense as their must be SRC code somewhere in the OS to do this. I have not tried it yet, but the Microsoft link below seems to have all of the capability to do so.  I will try it and get back to this posting…&lt;br /&gt;&lt;br /&gt;http://msdn.microsoft.com/en-us/library/windows/desktop/ff819070(v=vs.85).aspx</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="9e0e5c74-0f08-4685-8a92-d928eaf43d78">
      <author>Mark H</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/17900587357903273800</website>
      <ip />
      <userAgent />
      <date>2013-08-21 14:14:34</date>
      <content>hi Anonymous, yes that is the DMO resampler object, and NAudio includes a wrapper that uses it within the WasapiOut class.</content>
    </comment>
  </comments>
</post>