<post>
  <title>IronPython 2.7 Visual Studio Integration</title>
  <slug>ironpython-27-visual-studio-integration</slug>
  <author>Mark Heath</author>
  <pubDate>2010-10-27 12:31:00</pubDate>
  <lastModified>2011-07-04 17:00:47</lastModified>
  <content>&lt;p&gt;I’ve been trying out &lt;a href="http://ironpython.codeplex.com"&gt;IronPython&lt;/a&gt; 2.7 beta 1, which includes Visual Studio 2010 integration and I’ve been very impressed. Here’s a brief rundown of the features (at least the ones I’ve found).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Project Templates&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Four new project templates are included – these are a Console Application, a WinForms application, a WPF application and finally a Silverlight web page. The templates each have just enough code to get you started.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-1.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Project Templates" border="0" alt="Project Templates" src="/posts/files/ironpython-27-visual-studio-integration-1.png" width="480" height="196"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;The Code Editor&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;As you might expect there is syntax highlighting for Python files:&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-2.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Syntax Highlighting" border="0" alt="Syntax Highlighting" src="/posts/files/ironpython-27-visual-studio-integration-2.png" width="485" height="239"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Another nice touch is that pressing backspace with the cursor at the start of a line of code moves it in one level of indentation. What I wasn’t expecting was intellisense, but it’s available in some places (though not everywhere since the dynamic nature of Python means you can’t guarantee that a variable will keep the same type that it was initially assigned).&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-3.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Intellisense" border="0" alt="Intellisense" src="/posts/files/ironpython-27-visual-studio-integration-3.png" width="658" height="283"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Another nice touch is red squiggly lines indicating syntax errors – very useful if like me you keep forgetting the colon at the end of if statements:&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-4.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Syntax Errors" border="0" alt="Syntax Errors" src="/posts/files/ironpython-27-visual-studio-integration-4.png" width="252" height="151"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Also the Navigation Bar is populated with the classes and methods in your source file:&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-5.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Navigation Bar" border="0" alt="Navigation Bar" src="/posts/files/ironpython-27-visual-studio-integration-5.png" width="534" height="97"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Another very nice touch is that the &lt;strong&gt;Find All References &lt;/strong&gt;and &lt;strong&gt;Go To Definition &lt;/strong&gt;both work. Also the &lt;strong&gt;Object Browser&lt;/strong&gt; includes classes and methods from your IronPython source files.&lt;/p&gt; &lt;p&gt; &lt;p&gt; &lt;p&gt;&lt;strong&gt;Solutions&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;When you create an IronPython project it creates a regular &lt;strong&gt;.sln&lt;/strong&gt; file, but your project is a &lt;strong&gt;.pyproj &lt;/strong&gt;file (which like .csproj is an msbuild project file under the hood). It doesn’t have too many configuration options, but it does allow you to add search paths for external python scripts or .NET libraries. You can also specify which your startup file is.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-6.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Startup File" border="0" alt="Startup File" src="/posts/files/ironpython-27-visual-studio-integration-6.png" width="543" height="338"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Search Path can also be configured in the Solution Explorer:&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-7.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Search Path" border="0" alt="Search Path" src="/posts/files/ironpython-27-visual-studio-integration-7.png" width="246" height="177"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;The Debugger&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;One of the most compelling reasons to use Visual Studio to write your IronPython apps is support for the debugger. You can set breakpoints and step through your code:&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-8.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Breakpoints" border="0" alt="Breakpoints" src="/posts/files/ironpython-27-visual-studio-integration-8.png" width="243" height="158"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Sadly tooltips showing the values of variables don’t seem to be implemented. The only tooltips I could get up was by hovering over the open quotes of a string literal. Also you can’t get at variable contents using the &lt;strong&gt;Immediate&lt;/strong&gt; or &lt;strong&gt;Watch&lt;/strong&gt; windows. Neither can you use Python variables or expressions for breakpoint conditions.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-9.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Watch window" border="0" alt="Watch window" src="/posts/files/ironpython-27-visual-studio-integration-9.png" width="436" height="88"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;However, the &lt;strong&gt;Locals&lt;/strong&gt; window does come to the rescue and can be used to examine the contents of variables while you are at a breakpoint.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-10.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Locals Window" border="0" alt="Locals Window" src="/posts/files/ironpython-27-visual-studio-integration-10.png" width="665" height="302"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;The IronPython Interactive Window&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Another great feature is the IronPython Interactive Window. This is the same old familiar interactive IronPython interpreter you get when you type &lt;strong&gt;ipy.exe&lt;/strong&gt;, except that it has a few tricks up its sleeve. It supports both syntax highlighting and intellisense, which works even better here since it can look at the live objects rather than having to analyse your source code.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-11.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="IronPython Interactive Window" border="0" alt="IronPython Interactive Window" src="/posts/files/ironpython-27-visual-studio-integration-11.png" width="431" height="289"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;There is an option on the debug menu to execute your application in IronPython Interactive:&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-12.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Execute Project in IronPython Interactive" border="0" alt="Execute Project in IronPython Interactive" src="/posts/files/ironpython-27-visual-studio-integration-12.png" width="381" height="127"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;This brings up the IronPython interactive window and attempts to run your project in it. You can even change scope, and investigate the value of variables in the various scopes of the different modules of your application. Here’s it running the simple test app I showed earlier:&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-13.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="IronPython Interactive" border="0" alt="IronPython Interactive" src="/posts/files/ironpython-27-visual-studio-integration-13.png" width="431" height="289"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;There are still a couple of issues using this for debugging. First, it doesn’t apply the Search Path to the interactive session so import statements fail. Second, running in this mode doesn’t seem to invoke the debugger, so you won’t stop at breakpoints. Hopefully these issues will be addressed in a future update of the tools.&lt;/p&gt; &lt;p&gt;Another nice feature is the ability to select IronPython code in the editor, right-click it and say – Send to Interactive. You need to be on a blank line in the interactive console though or it can get a bit confused. But this is a great way to get longer functions into the interactive window.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/ironpython-27-visual-studio-integration-14.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Send to Interactive" border="0" alt="Send to Interactive" src="/posts/files/ironpython-27-visual-studio-integration-14.png" width="425" height="313"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The Visual Studio support for IronPython is very impressive. It still needs a few enhancements, particularly in the area of debugging, but there are still plenty of advantages to using Visual Studio for IronPython development over simply working directly with files.&lt;/p&gt; &lt;p&gt;Since this post is fairly long, I’ll save comments on Silverlight with IronPython for another time.&lt;/p&gt;  </content>
  <ispublished>true</ispublished>
  <categories>
    <category>Visual Studio</category>
    <category>IronPython</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="true" id="01da0a20-bdc8-4ff8-8559-018a476f639d">
      <author>Anonymous</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2011-02-02 22:14:10</date>
      <content>Very useful information. Thanks.</content>
    </comment>
  </comments>
</post>