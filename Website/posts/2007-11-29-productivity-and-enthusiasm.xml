<post>
  <title>Productivity and Enthusiasm</title>
  <slug>productivity-and-enthusiasm</slug>
  <author>Mark Heath</author>
  <pubDate>2007-11-29 12:27:00</pubDate>
  <lastModified>2011-07-04 16:48:45</lastModified>
  <content>&lt;p&gt;During my holidays in my first year at university I did some warehouse work to earn some extra cash. My job involved offloading pallets of food from lorries using hydraulic pallet jacks and depositing them down a ramp from which the fork-lift truck drivers would collect them to stack in the warehouse.&lt;/p&gt; &lt;p&gt;Now when a lorry came in to be offloaded, there was nowhere to hide. Whether I was feeling full of enthusiasm for doing my job or bored witless, I still had to get to work. The net result was that whether my "enthusiasm" (E on the graph below) was low or very high, my "productivity" (P on the graph below) didn't vary that much.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/productivity-and-enthusiasm-1.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Productivity versus Enthusiasm for manual labour" border="0" alt="Productivity versus Enthusiasm for manual labour" src="/posts/files/productivity-and-enthusiasm-1.png" width="182" height="171"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;What's this got to do with software? Well, the following years I started doing programming as a holiday job, and went on to become a full-time computer programmer. But I soon noticed that in the world of software development, my Productivity versus Enthusiasm curve was radically different.&lt;/p&gt; &lt;p&gt;Suppose I come into work feeling tired and the task I have been given to do is not an enjoyable one (e.g. fixing elusive bugs on a legacy product, or adding a pointless feature to please marketing, writing documentation). In that case I find that a day can easily go past where productivity is close to zero. &lt;/p&gt; &lt;p&gt;On the other hand there are days when I am feeling very enthusiastic about my work. Perhaps it is because I am learning and using some new and interesting technology, or perhaps I am refactoring some badly designed class into a really elegant and simple structure. In this case I find that my productivity increases exponentially. As long as I am not interrupted by distractions, in this state I can become super-productive, fixing bugs and churning out new features at an incredible rate.&lt;/p&gt; &lt;p&gt;&lt;a href="/posts/files/productivity-and-enthusiasm-2.png"&gt;&lt;img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="Productivity versus enthusiasm for software development" border="0" alt="Productivity versus enthusiasm for software development" src="/posts/files/productivity-and-enthusiasm-2.png" width="186" height="174"&gt;&lt;/a&gt; &lt;/p&gt; &lt;p&gt;Why the difference between the two graphs? Why could I get work done at the warehouse on low enthusiasm days, but not in the world of software development? The answer is simply that to write software requires &lt;em&gt;concentration&lt;/em&gt; and concentration requires &lt;em&gt;interest&lt;/em&gt;. At the warehouse I could offload lorries while thinking about all kinds of unrelated subjects. But to write code, my mental focus must be entirely on the task at hand.&lt;/p&gt; &lt;p&gt;If this is true, then the way to maximise productivity is to minimise boredom. If we recognise the things that capture our interest and enthusiasm, we can design development strategies that promote productivity.&lt;/p&gt; &lt;p&gt;This is I think part of the genius of the "agile" approach to software development. Running tests manually is boring, but writing automated tests is much more intellectually stimulating. Bug-fixing is boring, but refactoring code to improve its design while you fix a bug gives a real sense of achievement for a developer who takes pride in their work.&lt;/p&gt; &lt;p&gt;I don't expect boredom can ever be completely eliminated, and so there will always be the need to grit your teeth and show some professionalism. But the route to increased productivity in software development is more closely tied to motivation and enthusiasm than many of our managers seem to appreciate.&lt;/p&gt;  </content>
  <ispublished>true</ispublished>
  <categories>
    <category>Software Development</category>
  </categories>
  <comments />
</post>