<post>
  <title>Visual Studio Regions</title>
  <slug>visual-studio-regions</slug>
  <author>Mark Heath</author>
  <pubDate>2007-06-01 09:33:00</pubDate>
  <lastModified>2010-10-04 12:57:03</lastModified>
  <content>&lt;p&gt;Visual Studio has a really nice &lt;em&gt;regions &lt;/em&gt;feature which allows you to mark off sections of a file so they can be collapsed in the editor.&lt;/p&gt;

&lt;pre class="brush: csharp"&gt;#region Painting Functions
... code goes here
#endregion&lt;/pre&gt;

&lt;p&gt;Now it seems that at Microsoft, there is a growing tendency to group absolutely everything in a class up into groups such as:
&lt;ul&gt;&lt;li&gt;Public methods&lt;/li&gt;&lt;li&gt;Public properties&lt;/li&gt;&lt;li&gt;Protected methods&lt;/li&gt;&lt;li&gt;Private methods&lt;/li&gt;&lt;li&gt;Events&lt;/li&gt;&lt;li&gt;Private data&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;And many developers who see this then go about implementing this in their own code, removing any regions already defined and moving things into new regions based on their accessibility.&lt;/p&gt;

&lt;p&gt;But here is the issue I have. How useful an organization is this really? I like it when a class has all of its private data together (I prefer at the top, but some put this at the bottom), so that is fine. And it makes sense for the constructors to be kept together.&lt;/p&gt;&lt;p&gt;But grouping methods by whether they are private, protected or public makes about as much sense as organizing your house by putting all the tables in one room and all the chairs in another. Yes its very organized, and yes you will know exactly where to go when you want a chair, but its not much use when you want to sit down at the table and eat dinner.&lt;/p&gt;

&lt;p&gt;Say I'm looking at some code and I see a call to a CalculateOffsets function. How should I know whether I will find it in the public, private or protected methods region?&lt;/p&gt;&lt;p&gt;Surely it makes more sense to group functions into regions by whatever logic the class does. A good example would be a region for the Dispose pattern which includes a public method, a protected method and a finalizer. Another example would be the implementation of an interface such as IComparable. In a Windows forms class, you might have a region that had event handlers for all controls on the form, or a region for just for dealing with one particularly complex control's events.&lt;/p&gt;&lt;p&gt;I'm not saying that the Microsoft way doesn't have benefits or should never be used. But its the one-size-fits-all approach that bothers me. I don't want to expand eight regions every time I open a file only to find most of them are empty or just have one item in each.&lt;/p&gt;</content>
  <ispublished>true</ispublished>
  <categories>
    <category>Visual Studio</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="true" id="5409fd5c-a1c4-437e-a701-1b0cd1389be9">
      <author>Anonymous</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2007-08-03 16:25:00</date>
      <content>&gt; Say I'm looking at some code and I see a call to a CalculateOffsets function. How should I know whether I will find it in the public, private or protected methods region?&lt;BR/&gt;&lt;BR/&gt;Er, right click -&gt; Go to definition?</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="df8b1901-d70e-4ab4-b2d9-ac93abb608ec">
      <author>Mark H</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/17900587357903273800</website>
      <ip />
      <userAgent />
      <date>2007-08-03 16:38:00</date>
      <content>true enough. "Go to definition" is one of my favourite VS features. It's even better if you know that control and minus key will get you back to where you were (I was too lazy to find that out until recently).&lt;BR/&gt;&lt;BR/&gt;My point was though, that the regions don't help me at all in that case. As I see it, regions should make it easy to find what I am looking for.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="261c6607-e7e2-4c23-b260-312c3e46479f">
      <author>Darin</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2008-11-01 18:53:00</date>
      <content>I was wondering if I was about the only person to see regions this way. Thanks for writing this.&lt;BR/&gt;I completely agree. Seems to me that in a +very+ few circumstances, regions might help, but in the general case, I think things like Goto Def, Navigate Back, and a sorted function list are much more effective.&lt;BR/&gt;&lt;BR/&gt;The only thing I might add is that I've always found that prefixing my Private members with "p" (or something) makes it MUCH easier for me to quickly see the "public" footprint of a class, and filter out the non-public stuff.&lt;BR/&gt;&lt;BR/&gt;This new tack of just naming every member a normal name seems to be more confusing that helpful.&lt;BR/&gt;&lt;BR/&gt;Thanks again for the article.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="20135a90-f090-441d-b882-5676853bde43">
      <author>Jeff</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/01116019391048198721</website>
      <ip />
      <userAgent />
      <date>2010-09-16 18:47:07</date>
      <content>I absolutely LOVE your anology!&lt;br /&gt;&lt;br /&gt;&amp;quot;But grouping methods by whether they are private, protected or public makes about as much sense as organizing your house by putting all the tables in one room and all the chairs in another. Yes its very organized, and yes you will know exactly where to go when you want a chair, but its not much use when you want to sit down at the table and eat dinner.&amp;quot;&lt;br /&gt;&lt;br /&gt;So funny!</content>
    </comment>
  </comments>
</post>