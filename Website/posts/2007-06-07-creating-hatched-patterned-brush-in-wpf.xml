<post>
  <title>Creating a Hatched / Patterned Brush in WPF</title>
  <slug>creating-hatched-patterned-brush-in-wpf</slug>
  <author>Mark Heath</author>
  <pubDate>2007-06-07 13:48:00</pubDate>
  <lastModified>2011-07-03 10:09:40</lastModified>
  <content>&lt;p&gt;I recently wanted to create a patterned brush in WPF. Of course, WPF is more than capable of doing hatching patterns, but it took me a little while to work out how to do it, especially since the MSDN2 website seems to have lost all example XAML snippets at the moment. &lt;br&gt;The approach I chose is to use a &lt;strong&gt;&lt;a href="http://msdn2.microsoft.com/en-us/library/system.windows.media.visualbrush.aspx"&gt;VisualBrush&lt;/a&gt;&lt;/strong&gt;, although a &lt;strong&gt;DrawingBrush&lt;/strong&gt; would probably work equally well. In the &lt;strong&gt;Visual&lt;/strong&gt; property of the VisualBrush you add your graphics. So for my examples I have one which just has a circle, allowing you to fill an object with dots, and one with two diagonal lines, to create cross-hatching. Then you need to set some additional properties on the VisualBrush:  &lt;ul&gt; &lt;li&gt;&lt;strong&gt;TileMode &lt;/strong&gt;would be set to Tile as this is a repeating pattern  &lt;li&gt;&lt;strong&gt;Stretch &lt;/strong&gt;is set to None  &lt;li&gt;The &lt;strong&gt;ViewBox &lt;/strong&gt;rectangle specifies a window onto the Visual allowing you to select just a part of it. Both my fill pattern visuals were 10x10, but I made the ViewBox for the dot fill 12x12 which effectively added some spacing between the dots.  &lt;li&gt;The &lt;strong&gt;ViewPort &lt;/strong&gt;rectangle gives more flexibility by specifying the position and dimensions of the first "tile". Normally you would simply set this to the same as the ViewBox, but you could use it to scale the tiled image in X or Y dimensions, or effectively slide the tiles across.&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Here's some example XAML: &lt;pre class="brush: xml"&gt;&amp;lt;Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
xmlns:sys="clr-namespace:System;assembly=mscorlib" 
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&amp;gt;
&amp;lt;Page.Resources&amp;gt;
  &amp;lt;VisualBrush 
    x:Key="DotFillBrush" 
    TileMode="Tile" 
    Viewport="0,0,10,10" 
    ViewportUnits="Absolute" 
    Viewbox="0,0,12,12"
    ViewboxUnits="Absolute"&amp;gt;
    &amp;lt;VisualBrush.Visual&amp;gt;
      &amp;lt;Ellipse 
        Fill="#00C0FF" 
        Width="10" Height="10" /&amp;gt;
      &amp;lt;/VisualBrush.Visual&amp;gt;
    &amp;lt;/VisualBrush&amp;gt;      
    &amp;lt;VisualBrush 
      x:Key="HatchBrush" 
      TileMode="Tile" Viewport="0,0,10,10" 
      ViewportUnits="Absolute" Viewbox="0,0,10,10"    
      ViewboxUnits="Absolute"&amp;gt;
      &amp;lt;VisualBrush.Visual&amp;gt;
        &amp;lt;Canvas&amp;gt;
           &amp;lt;Rectangle Fill="Azure" Width="10" Height="10" /&amp;gt;
           &amp;lt;Path Stroke="Purple" Data="M 0 0 l 10 10" /&amp;gt;
           &amp;lt;Path Stroke="Purple" Data="M 0 10 l 10 -10" /&amp;gt;
        &amp;lt;/Canvas&amp;gt;
      &amp;lt;/VisualBrush.Visual&amp;gt;
   &amp;lt;/VisualBrush&amp;gt;      
&amp;lt;/Page.Resources&amp;gt;

&amp;lt;Canvas&amp;gt;
&amp;lt;Rectangle Canvas.Top="20" Canvas.Left="20" 
  Width="80" Height="40" 
  Fill="{StaticResource DotFillBrush}"/&amp;gt;
&amp;lt;Rectangle Canvas.Top="20" Canvas.Left="120" 
  Width="80" Height="40" 
  Fill="{StaticResource HatchBrush}"/&amp;gt;
&amp;lt;TextBlock Canvas.Top="80" Canvas.Left="20" 
  Text="Hello" FontSize="80" 
  Foreground="{StaticResource DotFillBrush}"/&amp;gt;
&amp;lt;TextBlock Canvas.Top="80" Canvas.Left="220" 
  Text="World" FontSize="80" 
  Foreground="{StaticResource HatchBrush}"/&amp;gt;
&amp;lt;/Canvas&amp;gt;
&amp;lt;/Page&amp;gt;
&lt;/pre&gt;
&lt;p&gt;And here's what it looks like:&lt;/p&gt;
&lt;p&gt;&lt;a href="/posts/files/creating-hatched-patterned-brush-in-wpf-1.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="WPF Patterned &amp;amp; Hatched Brushes" src="/posts/files/creating-hatched-patterned-brush-in-wpf-1.png" width="431" height="171"&gt;&lt;/a&gt;&lt;/p&gt;  </content>
  <ispublished>true</ispublished>
  <categories>
    <category>WPF</category>
    <category>XAML</category>
    <category>HOWTO</category>
  </categories>
  <comments>
    <comment isAdmin="false" isApproved="true" id="82a83be4-6b2a-4f53-a397-a2022b3f9fbe">
      <author>Steve w</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2008-08-09 15:59:00</date>
      <content>Unfortunately, Silverlight doesn't have the DrawingBrush or the VisualBrush, which means that so far I have been unable to figure out how to fill in a rectangle with the simplest of patterns instead of a solid color.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="1fcb06a8-5f3f-4032-9632-c15a852c86e1">
      <author>Mark H</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/17900587357903273800</website>
      <ip />
      <userAgent />
      <date>2008-08-10 14:56:00</date>
      <content>Hi Steve, yes it is a shame that Silverlight doesn't have all the features of WPF. Hopefully this will be rectified in future version</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="6ff3578d-35eb-4f0d-8918-842a218baac5">
      <author>Jeff Bailey</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2008-10-09 23:51:00</date>
      <content>When creating diagonal hashes, you are stuck with empty pixels at the corners with this approach.  It is more evident if you change your visualbrush to use just a single path at a diagonal (0,10 to 10,-10).  You will see what appears to be small gaps at the corners.  An alternative way would be to always create the lines vertical or horizontal and set the transform on the brush to be rotate the entire brush.</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="3c415534-eb04-490f-87bf-90bf8a814a8d">
      <author>Mark</author>
      <email>noreply@blogger.com</email>
      <website>http://www.sharkadder.com</website>
      <ip />
      <userAgent />
      <date>2008-11-24 12:19:00</date>
      <content>Hi Mark,&lt;BR/&gt;&lt;BR/&gt;Thanks for this tutorial but unfortunately i couldn't get it working.  Maybe i have missed some functions but things like GetNoteYPosition or NoteSeperateBrush variable don't seem to be recognized.  You never specified where these were meant to go.&lt;BR/&gt;&lt;BR/&gt;Since i am currently doing some research into how midi works within C#, do you think that it would be possible to put a compressed solution version of the tutorials underneath the tutorial names?  If this isn't possible then will you be able to paste the whole xaml and the window code?&lt;BR/&gt;&lt;BR/&gt;Thanks, i would of dropped you an e-mail but it appears that your website doesn't have it on.&lt;BR/&gt;&lt;BR/&gt;Mark</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="2f296958-9b1c-400a-ad5c-056d58b3242c">
      <author>Anonymous</author>
      <email>noreply@blogger.com</email>
      <website />
      <ip />
      <userAgent />
      <date>2009-02-25 08:29:00</date>
      <content>Hi, I was able to do a dot pattern starting from your example and it worked perfectly :D.&lt;BR/&gt;&lt;BR/&gt;VisualBrush vb = new VisualBrush();&lt;BR/&gt;&lt;BR/&gt;vb.TileMode = TileMode.Tile;&lt;BR/&gt;&lt;BR/&gt;vb.Viewport = new Rect(0, 0, 10, 10);&lt;BR/&gt;vb.ViewportUnits = BrushMappingMode.Absolute;&lt;BR/&gt;&lt;BR/&gt;vb.Viewbox = new Rect(0, 0, 12, 12);&lt;BR/&gt;vb.ViewboxUnits = BrushMappingMode.Absolute;&lt;BR/&gt;&lt;BR/&gt;Ellipse ellipse = new Ellipse();&lt;BR/&gt;ellipse.Fill = Brushes.Black;&lt;BR/&gt;ellipse.Width = 10;&lt;BR/&gt;ellipse.Height = 10;&lt;BR/&gt;vb.Visual = ellipse;&lt;BR/&gt;&lt;BR/&gt;return vb;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;Thanks!</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="f7659cc0-377d-40b1-b92d-d2cf51ad505f">
      <author>Neal</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/04907300837613315465</website>
      <ip />
      <userAgent />
      <date>2009-05-12 21:03:00</date>
      <content>Thanks Mark - I was looking for a crosshatch and came across your article - it helped a lot!</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="0e39da94-5878-4d30-a270-a85a07a9baa7">
      <author>geFrank</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/13266468890172076878</website>
      <ip />
      <userAgent />
      <date>2011-01-12 20:18:38</date>
      <content>I was looking for a hatched example to &amp;quot;hatch&amp;quot; a datagrid row based on a DataTrigger and this worked great!!&lt;br /&gt;&lt;br /&gt;Thanks...</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="a65732dd-589c-494b-a441-b0cf74b3e2a2">
      <author>Fernando</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/03870008744409943339</website>
      <ip />
      <userAgent />
      <date>2011-06-13 19:18:22</date>
      <content>Also in VB.NET we have it:&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Dim MyBrush As New VisualBrush With {.TileMode = TileMode.Tile, .Viewport = New Rect(0, 0, 10, 10), .ViewportUnits = BrushMappingMode.Absolute, .Viewbox = New Rect(0, 0, 12, 12), .ViewboxUnits = BrushMappingMode.Absolute}&lt;br /&gt;        MyBrush.Visual = New Ellipse With {.Fill = Brushes.Black, .Width = 10, .Height = 10}</content>
    </comment>
    <comment isAdmin="false" isApproved="true" id="64653d5e-5f38-481c-8ed2-20ada8c0e561">
      <author>JD Bell</author>
      <email>noreply@blogger.com</email>
      <website>http://www.blogger.com/profile/13276545622205929576</website>
      <ip />
      <userAgent />
      <date>2012-02-17 00:39:45</date>
      <content>Extremely simple and extremely helpful. Thank you! And my UI thanks you too!</content>
    </comment>
  </comments>
</post>