<post>
  <title>NAudio 1.7 Release Notes</title>
  <slug>naudio-17-release-notes</slug>
  <author>Mark Heath</author>
  <pubDate>2013-10-29 19:06:00</pubDate>
  <lastModified>2013-10-29 19:06:06</lastModified>
  <content>&lt;p&gt;It’s been just over a year since the &lt;a href="/post/naudio-16-release-notes-10th"&gt;last release&lt;/a&gt;, so an updated release of &lt;a href="https://naudio.codeplex.com/"&gt;NAudio&lt;/a&gt; is long overdue and there’s a lot of great new features added over the last year which I’m really excited to make official. In particular, this release adds Media Foundation support, allowing you to play from a much wider variety of audio file types, including extracting audio from video files. There’s also been significant progress on Windows 8 store app support although it still isn’t quite ready for official release.&lt;/p&gt; &lt;p&gt;As usual you can get it via &lt;a href="https://www.nuget.org/packages/NAudio/1.7.0"&gt;Nuget&lt;/a&gt;, or download it &lt;a href="https://naudio.codeplex.com/releases/view/114106"&gt;from Codeplex&lt;/a&gt;. Last year NAudio 1.6 was downloaded 29616 times from Codeplex and 7089 times on nuget.&lt;/p&gt; &lt;h3&gt;What’s new in NAudio 1.7?&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;MediaFoundationReader&lt;/strong&gt; allows you to play any audio files that Media Foundation can play, which on Windows 7 and above means playback of AAC, MP3, WMA, as well as playing the audio from video files.  &lt;li&gt;&lt;strong&gt;MediaFoundationEncoder&lt;/strong&gt; allows you to easily encode audio using any Media Foundation Encoders installed on your machine. The WPF Demo application shows this in action, allowing you to encode AAC, MP3 and WMA files in Windows 8.  &lt;li&gt;&lt;strong&gt;MediaFoundationTransform&lt;/strong&gt; is a low-level class designed to be inherited from, allowing you to get direct access to Media Foundation Transforms if that’s what you need.  &lt;li&gt;&lt;strong&gt;MediaFoundationResampler&lt;/strong&gt; direct access to the Media Foundation Resampler MFT as an IWaveProvider, with the capability to set the quality level.  &lt;li&gt;NAudio is now built against &lt;strong&gt;.NET 3.5&lt;/strong&gt;. This allows us to make use of language features such as extension methods, LINQ and Action/Func parameters.  &lt;li&gt;You can enumerate Media Foundation Transforms to see what’s installed. The WPF Demo Application shows how to do this.  &lt;li&gt;WasapiCapture supports exclusive mode, and a new WASAPI capture demo has been added to the WPF demo application, allowing you to experiment more easily to see what capture formats your soundcard will support.  &lt;li&gt;A new &lt;strong&gt;ToSampleProvider&lt;/strong&gt; extension method on IWaveProvider now makes it trivially easy to to convert any PCM WaveProvider to an ISampleProvider. There is also another extension method allowing an ISampleProvider to be passed directly into any IWavePlayer implementation without the need for converting back to an IWaveProvider first.  &lt;li&gt;WaveFileWriter supports creating a 16 bit WAV file directly from an ISampleProvider with the new &lt;strong&gt;CreateWaveFile16 &lt;/strong&gt;static method.  &lt;li&gt;&lt;strong&gt;IWavePosition&lt;/strong&gt; interface implemented by several IWavePlayer classes allows greater accuracy of determining exact position of playback. Contribution courtesy of ioctlLR  &lt;li&gt;AIFF File Writer (courtesy of Gaiwa)  &lt;li&gt;Added the ability to add a local ACM driver allowing you to use ACM codecs without installing them. Use &lt;strong&gt;AcmDriver.AddLocalDriver&lt;/strong&gt;  &lt;li&gt;&lt;strong&gt;ReadFully &lt;/strong&gt;property allows you to create never-ending &lt;strong&gt;MixingSampleProvider&lt;/strong&gt;, for use when dynamically adding and removing inputs.  &lt;li&gt;WasapiOut now allows setting the playback volume directly on the MMDevice.  &lt;li&gt;Support for sending MIDI Sysex messages, thanks to Marcel Schot  &lt;li&gt;A new &lt;strong&gt;BiQuadFilter &lt;/strong&gt;for easy creation of various filter types including high pass, low pass etc  &lt;li&gt;A new &lt;strong&gt;EnvelopeGenerator &lt;/strong&gt;class for creating ADSR envelopes based on a blog post from Nigel Redmon.  &lt;li&gt;Lots of bugfixes (see the &lt;a href="https://naudio.codeplex.com/SourceControl/list/changesets"&gt;commit history&lt;/a&gt; for more details). Some highlights include… &lt;ul&gt; &lt;ul&gt; &lt;li&gt;Fixed a long-standing issue with MP3FileReader incorrectly interpreting some metadata as an MP3 frame then throwing an exception saying the sample rate has changed.  &lt;li&gt;WaveFileReader.TryReadFloat works in stereo files  &lt;li&gt;Fixed possible memory exception with large buffer sizes for WaveInBuffer and WaveOutBuffer&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;!--EndFragment--&gt;&lt;/ul&gt; &lt;li&gt;Various code cleanups including removal of use of ApplicationException, and removal of all classes marked as obsolete.  &lt;li&gt;&lt;strong&gt;Preview Release of WinRT support&lt;/strong&gt;.&lt;strong&gt; &lt;/strong&gt;The &lt;a href="http://www.nuget.org/packages/NAudio/"&gt;NAudio nuget package&lt;/a&gt; now includes a WinRT version of NAudio for Windows 8 store apps. This currently supports basic recording and playback. This should still very much be thought of as a preview release. There are still several parts of NAudio (in particular several of the file readers and writers) that are not accessible, and we may need to replace the MFT Resampler used by WASAPI with a fully managed one, as it might mean that Windows Store certification testing fails.  &lt;ul&gt; &lt;li&gt;Use &lt;strong&gt;WasapiOutRT&lt;/strong&gt; for playback  &lt;li&gt;Use &lt;strong&gt;WasapiCaptureRT &lt;/strong&gt;for record (thanks to Kassoul for some performance enhancement suggestions)  &lt;li&gt;There is a demo application in the NAudio source code showing record and playback&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt; &lt;h3&gt;NAudio Training&lt;/h3&gt; &lt;p&gt;Another thing I’ve wanted to do for ages is to create some really good training materials for NAudio. I began this with the release of my &lt;a href="http://pluralsight.com/training/Courses/TableOfContents/digital-audio-fundamentals"&gt;Digital Audio Fundamentals course&lt;/a&gt; on Pluralsight, which is all about giving you the background understanding you need in order to work effectively with NAudio. And I’m on the verge of releasing the follow-on course which is around 6 hours of in-depth training on how to use NAudio. Keep an eye on my &lt;a href="http://pluralsight.com/training/Authors/Details/mark-heath"&gt;Pluralsight Author page&lt;/a&gt; and you should see it in a couple of weeks. I’ll also announce it here on my blog. You do need to be a Pluralsight subscriber to watch these videos, but it’s only $29 for a month’s subscription, which also gives you access to their entire library, making it a great deal.&lt;/p&gt; &lt;h3&gt;What’s next?&lt;/h3&gt; &lt;p&gt;I’ve still got lots of plans for NAudio. Here’s a few of the things near the top of my list for NAudio 1.8:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Finish Windows Store support. In particular, this means ensuring it passes Windows App Certification  &lt;li&gt;I’d really like to add a fully managed resampler, which would help out in a lot of scenarios. I’ve got one ported from C already, but sadly it’s license (LGPL) isn’t compatible with NAudio’s.  &lt;li&gt;More Media Foundation features. In particular, supporting reading from and writing to streams.  &lt;li&gt;I’ll probably obsolete the DirectX Media Object components, as they serve little purpose now that we have MediaFoundation support &lt;li&gt;More managed effects implemented as ISampleProvider  &lt;li&gt;I have some ideas for making a fluent API for NAudio to make it much easier to construct complex signal chains in a single line. &lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/li&gt;&lt;/ul&gt; &lt;p&gt;Hope you find NAudio useful. Don’t forget to get in touch and tell me what you’ve built with it.&lt;/p&gt;  </content>
  <ispublished>true</ispublished>
  <categories>
    <category>NAudio</category>
  </categories>
  <comments />
</post>